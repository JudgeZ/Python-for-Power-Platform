openapi: 3.0.3
info:
  title: Power Platform Governance - DLP & Cross-Tenant Reports
  version: 0.3.0
  description: |
    Data Loss Prevention (DLP) rule-based policies and Cross-Tenant Connection Reports.
servers:
  - url: https://api.powerplatform.com
tags:
  - name: Rule Based Policies
  - name: Cross-Tenant Reports
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
          tokenUrl: https://login.microsoftonline.com/common/oauth2/v2.0/token
          scopes:
            https://api.powerplatform.com/.default: Power Platform API default scope
security:
  - oauth2: [https://api.powerplatform.com/.default]
paths:
  /governance/ruleBasedPolicies:
    get:
      tags: [Rule Based Policies]
      summary: List rule based DLP policies
      operationId: governance_listRuleBasedPolicies
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Policies
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/Policy" }
    post:
      tags: [Rule Based Policies]
      summary: Create rule based policy
      operationId: governance_createRuleBasedPolicy
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/PolicyRequest" }
      responses:
        "200":
          description: Created policy
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Policy" }
  /governance/ruleBasedPolicies/{policyId}:
    get:
      tags: [Rule Based Policies]
      summary: Get rule based policy by ID
      operationId: governance_getRuleBasedPolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Policy
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Policy" }
    put:
      tags: [Rule Based Policies]
      summary: Update rule based policy
      operationId: governance_updateRuleBasedPolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/PolicyRequest" }
      responses:
        "200":
          description: Updated policy
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Policy" }
  /governance/ruleBasedPolicies/{policyId}/assignments:
    get:
      tags: [Rule Based Policies]
      summary: List assignments for a policy
      operationId: governance_listAssignmentsByPolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema: { type: string }
        - name: includeRuleSetCounts
          in: query
          required: true
          schema: { type: boolean }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Assignments
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/RuleAssignment" }
  /governance/ruleBasedPolicies/assignments:
    get:
      tags: [Rule Based Policies]
      summary: List all policy assignments
      operationId: governance_listRuleAssignments
      parameters:
        - name: includeRuleSetCounts
          in: query
          required: true
          schema: { type: boolean }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Assignments
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/RuleAssignment" }
  /governance/ruleBasedPolicies/environmentGroups/{environmentGroupId}/assignments:
    get:
      tags: [Rule Based Policies]
      summary: List assignments for an environment group
      operationId: governance_listAssignmentsByEnvironmentGroup
      parameters:
        - name: environmentGroupId
          in: path
          required: true
          schema: { type: string }
        - name: includeRuleSetCounts
          in: query
          required: true
          schema: { type: boolean }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Assignments
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/RuleAssignment" }
  /governance/ruleBasedPolicies/environments/{environmentId}/assignments:
    get:
      tags: [Rule Based Policies]
      summary: List assignments for an environment
      operationId: governance_listAssignmentsByEnvironment
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: includeRuleSetCounts
          in: query
          required: true
          schema: { type: boolean }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Assignments
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/RuleAssignment" }
  /governance/ruleBasedPolicies/{policyId}/environmentGroups/{groupId}/assignments:
    post:
      tags: [Rule Based Policies]
      summary: Assign policy to environment group
      operationId: governance_assignPolicyToEnvironmentGroup
      parameters:
        - name: policyId
          in: path
          required: true
          schema: { type: string }
        - name: groupId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Assignment
          content:
            application/json:
              schema: { $ref: "#/components/schemas/RuleAssignment" }
        "201":
          description: Created
          content:
            application/json:
              schema: { $ref: "#/components/schemas/RuleAssignment" }
  /governance/ruleBasedPolicies/{policyId}/environments/{environmentId}/assignments:
    post:
      tags: [Rule Based Policies]
      summary: Assign policy to environment
      operationId: governance_assignPolicyToEnvironment
      parameters:
        - name: policyId
          in: path
          required: true
          schema: { type: string }
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Assignment
          content:
            application/json:
              schema: { $ref: "#/components/schemas/RuleAssignment" }
        "201":
          description: Created
          content:
            application/json:
              schema: { $ref: "#/components/schemas/RuleAssignment" }
  /governance/crossTenantConnectionReports:
    get:
      tags: [Cross-Tenant Reports]
      summary: List cross-tenant connection reports
      operationId: governance_listCrossTenantConnectionReports
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Reports
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/CrossTenantReport" }
    post:
      tags: [Cross-Tenant Reports]
      summary: Create cross-tenant connection report
      operationId: governance_createCrossTenantConnectionReport
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: false
        content:
          application/json:
            schema: { $ref: "#/components/schemas/CrossTenantReportRequest" }
      responses:
        "202": { description: Accepted - report generation started }
  /governance/crossTenantConnectionReports/{reportId}:
    get:
      tags: [Cross-Tenant Reports]
      summary: Get cross-tenant connection report
      operationId: governance_getCrossTenantConnectionReport
      parameters:
        - name: reportId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Report
          content:
            application/json:
              schema: { $ref: "#/components/schemas/CrossTenantReport" }
components:
  schemas:
    RuleSet:
      type: object
      properties:
        id: { type: string }
        inputs: { type: object }
        version: { type: string }
    PolicyRequest:
      type: object
      properties:
        name: { type: string }
        ruleSets:
          type: array
          items: { $ref: "#/components/schemas/RuleSet" }
    Policy:
      type: object
      properties:
        policyId: { type: string }
        name: { type: string }
        ruleSets:
          type: array
          items: { $ref: "#/components/schemas/RuleSet" }
    RuleAssignment:
      type: object
      properties:
        policyId: { type: string }
        resourceId: { type: string }
        resourceType: { type: string }
        ruleSetCount: { type: integer }
        tenantId: { type: string }
    CrossTenantReportRequest:
      type: object
      additionalProperties: true
    CrossTenantReport:
      type: object
      properties:
        id: { type: string }
        status: { type: string, enum: [Queued, Running, Succeeded, Failed] }
        createdTime: { type: string, format: date-time }
        completedTime: { type: string, format: date-time }
        downloadUri: { type: string }
