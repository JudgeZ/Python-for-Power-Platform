openapi: 3.0.3
info:
  title: Power Platform - Environment Management
  version: 2022-03-01-preview
  description: Manage Power Platform environments and environment groups.
servers:
  - url: https://api.powerplatform.com
tags:
  - name: Environment Management
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
          tokenUrl: https://login.microsoftonline.com/common/oauth2/v2.0/token
          scopes:
            https://api.powerplatform.com/.default: Power Platform API default scope
  schemas:
    Environment:
      type: object
      additionalProperties: true
      properties:
        id: { type: string }
        name: { type: string }
        type: { type: string }
        region: { type: string }
        createdTime: { type: string, format: date-time }
        createdBy: { type: object, additionalProperties: true }
    EnvironmentGroup:
      type: object
      additionalProperties: true
      properties:
        id: { type: string, format: uuid }
        displayName: { type: string }
        description: { type: string }
        parentGroupId: { type: string, format: uuid }
        childrenGroupIds:
          type: array
          items: { type: string, format: uuid }
    OperationExecutionResult:
      type: object
      additionalProperties: true
      properties:
        operationId: { type: string }
        status: { type: string, enum: [Queued, Running, Succeeded, Failed] }
        message: { type: string }
security:
  - oauth2: [https://api.powerplatform.com/.default]
paths:
  /environmentmanagement/environments:
    get:
      tags: [Environment Management]
      summary: List environments for user
      operationId: environmentManagement_listEnvironments
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/Environment" }
                  nextLink: { type: string }
  /environmentmanagement/environments/{environmentId}:
    get:
      tags: [Environment Management]
      summary: Get environment
      operationId: environmentManagement_getEnvironment
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Environment
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Environment" }
    delete:
      tags: [Environment Management]
      summary: Delete environment
      operationId: environmentManagement_deleteEnvironment
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: ValidateOnly
          in: query
          required: false
          schema: { type: boolean }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "202":
          description: Deletion accepted
          headers:
            Operation-Location:
              description: Polling URL for the long-running operation
              schema: { type: string, format: uri }
        "204": { description: Deleted }
  /environmentmanagement/environmentGroups:
    get:
      tags: [Environment Management]
      summary: List environment groups
      operationId: environmentManagement_listEnvironmentGroups
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items: { $ref: "#/components/schemas/EnvironmentGroup" }
    post:
      tags: [Environment Management]
      summary: Create environment group
      operationId: environmentManagement_createEnvironmentGroup
      parameters:
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/EnvironmentGroup" }
      responses:
        "200": { description: Created }
  /environmentmanagement/environmentGroups/{groupId}:
    get:
      tags: [Environment Management]
      summary: Get environment group
      operationId: environmentManagement_getEnvironmentGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string, format: uuid }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: Environment group
          content:
            application/json:
              schema: { $ref: "#/components/schemas/EnvironmentGroup" }
    patch:
      tags: [Environment Management]
      summary: Update environment group
      operationId: environmentManagement_updateEnvironmentGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string, format: uuid }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/EnvironmentGroup" }
      responses:
        "200": { description: Updated }
    delete:
      tags: [Environment Management]
      summary: Delete environment group
      operationId: environmentManagement_deleteEnvironmentGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string, format: uuid }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "202":
          description: Deletion accepted
          headers:
            Operation-Location:
              description: Polling URL for the long-running operation
              schema: { type: string, format: uri }
  /environmentmanagement/environmentGroups/{groupId}/addEnvironment/{environmentId}:
    post:
      tags: [Environment Management]
      summary: Add environment to group
      operationId: environmentManagement_addEnvironmentToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string, format: uuid }
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "202": 
          description: Accepted
          headers:
            Operation-Location:
              description: Polling URL for the long-running operation
              schema: { type: string, format: uri }
        "204": { description: No Content }
  /environmentmanagement/environmentGroups/{groupId}/removeEnvironment/{environmentId}:
    post:
      tags: [Environment Management]
      summary: Remove environment from group
      operationId: environmentManagement_removeEnvironmentFromGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string, format: uuid }
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "202": 
          description: Accepted
          headers:
            Operation-Location:
              description: Polling URL for the long-running operation
              schema: { type: string, format: uri }
        "204": { description: No Content }
  /environmentmanagement/environments/{environmentId}/settings:
    get:
      tags: [Environment Management]
      summary: List environment management settings
      operationId: environmentManagement_listSettings
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { type: object }
    post:
      tags: [Environment Management]
      summary: Create environment management settings
      operationId: environmentManagement_createSettings
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: true
        content:
          application/json:
            schema: { type: object, additionalProperties: true }
      responses:
        "200": { description: OK }
    patch:
      tags: [Environment Management]
      summary: Update environment management settings
      operationId: environmentManagement_updateSettings
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      requestBody:
        required: true
        content:
          application/json:
            schema: { type: object, additionalProperties: true }
      responses:
        "200": { description: OK }
  /environmentmanagement/environments/{environmentId}/governancesetting/enablemanaged:
    post:
      tags: [Environment Management]
      summary: Enable managed environment
      description: Opt-in the environment to become a managed environment.
      operationId: environmentManagement_enableManagedEnvironment
      parameters:
        - name: environmentId
          in: path
          required: true
          schema: { type: string }
        - name: ValidateOnly
          in: query
          required: false
          schema: { type: boolean }
        - name: ValidateProperties
          in: query
          required: false
          schema: { type: boolean }
        - name: api-version
          in: query
          required: true
          schema: { type: string, enum: ["2022-03-01-preview"] }
      responses:
        "201":
          description: Created - operation accepted and created
          headers:
            Operation-Location:
              description: Polling URL for the long-running operation
              schema: { type: string, format: uri }
          content:
            application/json:
              schema: { $ref: "#/components/schemas/OperationExecutionResult" }
        "400": { description: Bad Request }
        "401": { description: Unauthorized }
        "404": { description: Not Found }
