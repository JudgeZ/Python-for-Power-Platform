from __future__ import annotations

from typing import Any, Callable, ContextManager, Protocol


class _Route(Protocol):
    def mock(self, *args: Any, **kwargs: Any) -> _Route: ...


class Router:
    calls: Any

    def __enter__(self) -> Router: ...
    def __exit__(self, exc_type: type[BaseException] | None, exc: BaseException | None, tb: Any) -> None: ...

    def get(self, *args: Any, **kwargs: Any) -> _Route: ...
    def post(self, *args: Any, **kwargs: Any) -> _Route: ...
    def put(self, *args: Any, **kwargs: Any) -> _Route: ...
    def patch(self, *args: Any, **kwargs: Any) -> _Route: ...
    def delete(self, *args: Any, **kwargs: Any) -> _Route: ...
    def route(self, *args: Any, **kwargs: Any) -> Callable[[Callable[..., Any]], Callable[..., Any]]: ...


def mock(*, assert_all_called: bool = ...) -> ContextManager[Router]: ...
